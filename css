5.6(27)css   style样式  color颜色 font-size大小
     第一种 (内联样式，行内样式)在标签内部通过style属性来设置元素的样式 只能对一个标签有用
     style="color:xxx;font-size:xxpx;"

5.7(28)css编写的位置
      第二种 （内部样式）将样式编写到head中的style标签里
      <style> p{color:xx;font-size:xx}   </style>   p表示所有p标签

      第三种(外部样式)
      在网页外设置一个css文件 需要link标签进行引用
      <link rel="stylesheet"href=""> stylesheet样式表              
    
    (29)基本语法
    p选择器  选中所有p元素
    {}声明块 为选中元素设置样式 一个样式名对应一个样式值 名：值；

    (30)常用选择器
    元素选择器 作用：根据标签名来选中指定元素 语法 标签名{}  
    id选择器 作用：根据id 属性来选定一个元素 语法 #id{}    
     class是一个标签的属性，它和id类似，但是可以重复使用 可以设置多个class名
     类选择器 作用：根据class属性值确定一组元素 语法 .名{}
     通配选择器 作用：选中所有元素 语法*{}

     (31)复合选择器
     标签.名{}
     交集选择器 (同时符合所有才可以选中）选中同时复合多个条件的元素 语法 选择器1选择器2{}
     如果有元素选择器要先写元素选择器
     选择器分组(并选择器) （包含的元素都选中）多个可以标签名，标签名

     (32)关系选择器
     父元素(直接包含子元素)
     子元素(直接被父元素包含)
     祖先元素(直接或间接包含后代元素)一个元素的父元素也是祖先元素
     后代(直接或间接被祖先元素包含的元素叫后代元素)子元素也是后代元素
     兄弟元素(拥有相同父元素是兄弟元素)

     子元素选择器 作用:选中指定父元素的指定子元素 语法：父元素>子元素
     后代元素选择器 作用：选中指定元素内的指定后代元素 语法：祖先 后代(全部同标签属性)
     选择下一个兄弟 语法：前一个+下一个
     选择下面所有兄弟元素 语法：兄~弟(要同一个标签属性)

     (33)属性选择器
     p[title] [属性名]选择含有指定属性的元素 
     [属性名=属性值]选择含有指定属性和属性值的元素
     <p title>将含title的p标签选中
     [属性名^=属性值]选择以属性值以指定值开头的元素
     [属性名$=属性值]选择属性值以指定值结尾的元素
     [属性名￥=属性值]选择属性值中含某值的元素的元素(出现在哪都可以)

     (34)伪类选择器 (一个:表示伪类 两个表示伪元素)
     可以标签>标签>块速写出
     标签*数字可以打开数个标签
     伪类用来描述一个元素状态，比如第一个，被点击，鼠标移入
     伪类一般情况下开头是 :  伪类都是根据所有元素进行排序
     ：first-child 第一个子元素
     ：last-child 最后
     :nth-child()选中第n个 如果直接写n就是0到无穷 2n（even）表示选中偶数位的元素 2n+1(odd)是奇数

      以同类元素中进行排序2 
     :first-of-type
     :last-of-type
     :nth-of-type()

     :not()否定伪类  去除
     :not(:nth-child())

     (35)超链接的伪类
     :link 用来表示没有访问过的链接(正常的链接)
     :visited用来表示访问过的
     由于隐私链接只能改颜色
     :hover 用来表示鼠标移入的状态 (可以设置大小)
     :active 用来表示鼠标点击

     (36)伪元素(表示页面中一些特殊的并不真实的存在的元素)(特殊元素)
     伪元素使用::开头
     ::first-letter 表示第一个字母
     p ::first-letter{
          font-letter 
     }
     ::first-line 表示第一行
     ::selection 表示选中的内容

     before 和after要结合content
     ::before 元素开始
     ::after元素的最后
     div:;before{
          content:'a';
          color:red;
     }

     (38)继承(我们为一个元素设置的样式的同时也会应用到它的后代)
     背景，布局相关的这些不会被继承
     background-color背景颜色

     (39)选择器的权重
     发生冲突根据权重
     权重高到低(内联，id，类和伪类，元素，通配，继承)
     比较优先级时，需要将所有的优先级进行相加计算，最后优先级高的，则优先显示(分组选择器单独计算)
     选择器的累加不会超过上一级
     如果优先级相同则优先使用靠下的
     可以加！important,获得最高优先级

5.8(40) 像素和百分比   
       .class名tab就可以直接创建标签
       长度单位：像素() 
       百分比可以将属性设置为父元素的百分比跟随父元素变化

       (41)em rem
       em是相对于元素字体大小计算的 1em=1font-size
       rem是相对于根元素的字体大小

       (42)rgb(由三种)颜色不同浓度来调配
       red green blue每一种在0~250(0%~100%)
       rgb(0,0,0)
       rgba表示不透明度 1完全不透明 0完全透明 0.5半透明
       rgba(0,0,0,0)

       十六进制的rgb 语法#红绿蓝  颜色浓度通过00-ff(ff最大)
       #ff0000(简写#f00) 前两位红色中间绿后蓝

       (43)hsl(h色相)(s饱和度(浓度0~100%))(l亮度(0~100%，0相对于关灯))

       (44)文档流
       作为用户只能看到最上层，通过css可以分别为每层设置样式，这些层中，最底下的一层称为文档流，文档流是网页的基础
       我们所创建的元素默认在文档中进行排序，对于我们来说元素主要有两个状态
       在文档流中
       块元素：在页面中独占一行
       默认宽度是父元素的全部(会把父元素充满)
       默认高度是被子元素撑开
       行内元素：不会独占一行只占自身大小，如果不能容纳会自动往下(span)

       不在

5.9   (45)盒子模型
       将页面中所有元素设置为盒子，对页面的布局为盒子的摆放
       内容区content  元素种所有子元素和文本内容都在内容区中排列
       width设置内容区的宽度 height 高度

      (46)边框border 
      宽度border-width 颜色border-color 样式border-style
       写4个的时候是顺时针 border-top单上 
      solid 实线  dotted点状虚线 dashed虚线 aouble 双线 double双线
      简写 border:solid xxpx color;
      单边框 border-top:xxx

5.10  (47)内边距padding 
      会影响盒子大小 和border语法差不多

      (48) 外边距margin
      不会影响可见框 影响盒子实际占地
      左和上移动自己 右和下移动别人
      可以设置负值向反方向走

      (49)水平方向布局
      元素在其父元素中水平方向的位置由以下几个属性共同决定
      margin-left  border-left  padding-left  width  padding-right border-right  margin-right
      一个元素在其父元素中必须满足
      margin-left  border-left  padding-left  width  padding-right border-right  margin-right=父元素width
      如果不成立会自动补到margin-right 
      有三个值可以自动auto with margin-left margin-right
      如果某个值为auto，则会自动调整为auto使等式成立
      如果一个宽度和外边距设置为auto，则宽度到最大
      如果三个都auto则，则外边距都是0，宽度最大
      如果两外边距auto，则设置相同
      利用这个特点可以使元素居中

5.11  (50)垂直方向布局
      使用overflow属性来设置父元素如何处理溢出的子元素(在父元素中写overflow:xxx)
      可选：visible默认值 子元素会从父元素溢出，在父元素外部的位置显示
      hidden 溢出部分会被剪切不显示
      scroll 生成两个滚动条，通过滚动来查看完整内容
      auto 根据需要生成滚动条 不会生成多余的滚动条
      overflow-x专门处理水平
      overflow-y垂直

      (51)外边距的折叠
      .class+.class直接创建双标签
      相邻的垂直方向外边距会发生重叠现象
      兄弟元素：兄弟元素间的相邻垂直外边相距会取两者之间的较大值(正值)如果一正一负取和，都是负则取绝对值较大
      兄弟之间元素的外边的重叠，对于开发是有利的，所以我们不需要进行处理

      父子元素:父子元素间邻外边框，子元素的会传递给父元素(上外边框)
      父子外边距的折叠会影响到页面的布局，必须处理

5.12  (52)行内元素的盒模型
      行内元素不支持设置高度和宽度 水平方向不会重叠
      可以设置padding，但是垂直方向padding不会影响页面布局
      可以设置border，垂直方向的不会影响布局
      可以设置margin，垂直方向的不会影响布局

      display用来设置元素显示的类型，在head里用 可选值
      inline将元素设置为行内元素
      block 块元素
      inline-block可以设置为行内块元素
      table 设置为表格
      none 元素不在页面显示 不占
      display: block；

      visibility用来设置元素的显示状态
      visable默认值，元素在页面显示
      hidden 元素在页面隐藏 不显示 但是依然占位

5.13  (53)浏览器的默认样式
      通常情况下要去掉浏览器的默认样式
      body{margin:0px}
      p{margin:0px}
      *{margin:0;padding:0}


      (56)shift alt f格式化格式
      text-decoration:none 去掉下划线

5.14 (57)网易新闻列表
     变为行内块元素
     display:inline-block
     font-weight:bold加粗
     text-decoration去掉下划线
     list-style square 设置为方块列表头

5.15(58)盒子大小
     box-size:border-box
     默认情况下,盒子可见框的大小由内容区,内边距和边框共同决定
     box-sizing 用来设置盒子尺寸的计算方式(设置width和height 作用)
     可选值  content-box 默认值 宽度和高度用来设置内容区的大小
     border-box 宽度和高度用来设置整个盒子的可见框大小
     width和height 指是内容区和内边距和边框的总大小

     (59)轮廓阴影和圆角
     outline 用来设置元素的轮廓线.用法和border一样
     轮廓和边框不同的是轮廓不会影响可见框大小

     box-shadow用来设置元素的阴影效果,阴影不会影响页面布局
     box-shadow:10px 10px  10pxcolor; 
     数字是阴影偏移点 第一个是水平移动量正右负左 第二是垂直 正下负上 第三个是阴影的模糊半径,越大越模糊

     border-radius 10px 20px 30px 40px;分别指定4个 顺时针 左上开始 三个值 右上和左下共享数据 2个值 左上右下 左下右上
     border-top-left-radius
     border-top-right-radius
     border-bottom-left-radius
     border-bottom-right-radius 
     border-top-left-radius:40px;半径40的圆角
      border-top-left-radius:40px 50px;第一个是水平 第二个是垂直
      border-radius:50%; 可以设置为圆

5.16 (60)浮动简介
      通过浮动可以使元素向其父元素的两侧移动 可选值none left right
      元素设置浮动后,会完全从文档流中脱离,不再占用文档流的位置所以元素下边的还在文档流的元素会自动向上移动
      浮动元素不会移出父元素
      浮动元素向左或右时不会超过它前面的浮动元素
      如果浮动元素上面是一个没有浮动的块元素那么就无法上去
      浮动元素不会超过它上边的浮动的兄弟元素,最多就是一样高

5.17(61)浮动的特点
      浮动不会盖住文字,文字会自动好在浮动元素的周围,利用浮动来设置文字环绕图片的效果
      元素浮动后脱离文档流,元素特点也会改变
      块元素不在独占一行
      行内元素变成块元素

5.18 (62)导航条练习w3school
      line-height去掉下划线      

5.19 (63)简单的布局
       header头部
       main 主体
       footer底部

       (64)高温塌陷和BFC(Block Formatting Context)块级格式化环境
       当子因素浮动后，其会完全脱离文档流，子因素脱离将无法撑起高度
        开启后会变成一个独立的布局区域
        1不会被浮动因素所覆盖
        2子元素和父元素外边距不会重叠
        3可以包含浮动的子元素

        通过特殊方式开启
        1设置因素的浮动
        2将元素设置为行内块元素
        3将元素的overflow设置为一个非visible的值  为元素设置overflow:hidden

5.20    (65)BFC演示
         overflow:hidden;裁剪多余

         (66)clear  清除浮动元素对当前元素所产生的影响
         可选值 
         left 清除左侧浮动元素对当前元素影响  right清除右侧  both清除两侧中最大影响的那侧
         原理 设置浮动后，浏览器会自动为元素添加一个上边距，以使其位置不受其他元素影响

5.21   (67)after伪类清除高温塌陷
        .xxafter{
              content:'';
              display:block;
              clear:both;
        }
5.22   (68)clearfix   可以同时解决高度塌陷和外边距重叠的问题
        .clearfix::before,
        .clearfix::after{
              content:'';
              display:table;
              clear:both;
        }

5.23   (69)相对定位position
        定位是一种更高级的布局手段
        通过定位可以将元素摆到页面容易位置
        使用position属性来设置定位
        可选值
        static 默认值 元素静止没有开启
        relative相对定位  offset偏移量
        对照就是自己
        不会脱离文档流
        不改变性质

        absolute绝对定位
        fixed固定定位
        sticky粘滞定位

5.24   (70)绝对定位 absolute
        不设置不发生变化
        元素从文档流脱离
        改变元素性质，行内变成块，块的高度被内容撑开
        绝对定位元素是相当于其包含块进行定位
        包含块(containing block)
        包含块就是离当前元素最近的祖先块元素
        绝对定位包含块是离它最近的开启了定位
        如果所有都没有就是它的包含块

5.25   (71)固定定位fixed
        固定定位也是一种绝对定位，所以大部分特点和绝对定位一样
        唯一不同的是固定定位永远参考于浏览器的视口进行定位
        滚动条下拉仍在固定位置

        (72)粘滞定位 sticky
        相对定位特点差不多
        不同的粘滞定位可以在元素到某个位置就固定

5.26    (73)绝对定位元素的位置
         当我们开启绝对定位后：水平方向的布局等式就需要添加left right 
         如果9个值中没有auto则自动调整right值
         可设置auto  margin width left right
         因为left和right 默认是auto，所以会自动调整
         垂直方向布局等式也必须要满足

5.27    （74）元素的层级
         对于开启了定位 可以用z-index属性指定元素层级
         z-index需要一个整数作为参考，值越大元素层级越高
         层级越高越优先显示
        如果层级一样优先显示下面的
        祖先元素的层级再高也不会盖住后代元素

5.28   (75)京东轮播图
        background-clip:content-box; 将背景颜色设置到内容区，
        边框和内边距不再有背景颜色

5.29    (76)字体族
       color设置字体颜色
       font-size字体大小
       em相当于当前元素的一个font-size
       rem相当于根元素的一个font-size
       font-family:''字体格式  
            可宋体。。
            serif 衬线字体(装饰字)
            sans-serif 非衬线字体
            monospace 等宽字体
       空格要加''
       字体生效优先使用第一个，无法使用使用第二个以此类推

       @font-face{  可以将服务器中的字体直接提供给用户去使用
             font-family:'xx';   指定字体的名字
             src:url(字体路径);   服务器中字体的路径
       }

5.30   (77)图标字体
       通过图片引入图标  图标直接设置为字体  通过font-face来对字体引入
       1直接通过类名来使用图标字体
       <i class="fas xxx"></i>   <i class="fab xxx"></i>

5.31   (78)2通过伪元素
       1找到要设置的通过before或after选中
       2 在content中设置字体编码
       3 设置样式
       xx::xxx{
       content:'\xx';
       font-family:'Font Awesome 5 Free'
       font-weight:xx;}

       3通过实体来使用图标字体
       &#x;图标的编码
       <xxx class="fas">&#x;图标的编码;

6.1   (79)iconfont

6.2   (80)行高 line-height
       是文字占有的实际高度
       可以通过line-height来设置
       如果是设置一个整数则是字体大小的倍数

       字体宽 就是字体存在的格子
       设置font-size就是在设置字体框的高度

       将行高和高度一样使元素居中

       设置行间距

6.3    (81)字体的简写属性
       font:字体大小/行高 字体族 不写默认、
       font:bold italic 字体 字体族
       
       font-weight:bold;加粗 100-900级别
       bold 黑体粗体
       italic 斜体

       normal 默认 不加粗 

       font-style:italic; 斜体
       normal

9.5   (82)文字水平和垂直对齐
      text-align: 水平right left center justify 两端对齐
      vertical-align 垂直beseline默认值 基线对齐 top顶部对齐和父元素 bottom底部对齐 middle居中对齐
      可以直接写值px

      (83)其他的文本样式
      text-decoration: none什么都没 underline下划线 line-through删除线 overline上划线
      white-space：空白区 normal正常 nowrap不换行 pre保留空白
      overflow:hidden裁剪多余
      text-overflow:ellipsis;多余显示省略号

      (84)jd结构

      (85)jd基本样式

      (86)jd下拉框

9.13  (88)背景1
      background-image: url(图片路径) 
      可以同时设置背景颜色和图片m
       如果背景图片小于元素，则背景图片会自动在元素中平铺将元素铺满
       如果背景的图片大于元素，将会一个部分背景无法完全显示
       如果背景图片和元素一样大，则会直接正常显示
       background-repeat :repeat(默认) repeat-x 沿着x轴重复 repeat-y y重复 no-repeat不重复 用来设置背景的重复方式 
       background-position top left right bottom center px px用来设置背景图片的位置

      (89)背景2
      设置背景的范围
      background-clip: border-box 默认值，背景会出现在边框的下边 
      padding-box 背景不会出现在边框，只出现在内容区和内边距 
      content-box背景只会出现在内容区
      
      背景图片的偏移量计算的原点
      background-origin: padding-box是默认值 从内边距开始计算
      center-box 背景图片的偏移量从内容区开始计算
      border-box 背景图片的变量从边框处开始计算

      设置背景图片大小
      background-size 第一个值宽度 第二高度   
      如果只写一个默认自动设置 auto自动充满  
      cover图片比例不变，将元素铺满  
      contain 图片比例不变，将图片在元素中铺满

      背景图片是否跟随元素移动
      background-attachment: scroll 默认值 会移动
      fixed 背景固定不动

      backgrounad集合
      size在position的后面用/隔开
      origin 在clip前


9.27  (90)背景练习1
      (91)背景练习2
      a:link hover active

      (92)雪碧图
      background-position切换位置
      1确定要使用的图标
      2测量图标的大小
      3根据测量结果创建一个元素
      4将雪碧图设置为元素的背景图片
      5设置一个偏移量以显示正确的图片

      (93)线性渐变
      通过渐变可以设置一些复杂的背景颜色，可以实现从一个颜色向其他颜色过渡的效果
      渐变是图片，需要通过background-image来设置
      线性渐变，颜色沿着一条直线发生变化   
      background-image:linear-gradient()  red,yellow
      background-image:linear-gradient(to right,red,yellow)
      background-image:linear-gradient(45deg,red,yellow)
      background-image:linear-gradient(red 50px,yellow)从50位置开始渐变

      可以平铺的线性渐变   50到100渐变
      background-image:repeating-linear-gradient(red 50px,yellow 100px)


9.28  (94)径向渐变
      放射性效果
      background-image:redial-gradinent(大小 at位置，颜色，位置，颜色，位置)
      100px,100px at 0,0 是一个100的圆心 圆心位置
      大小
      circle正圆
      ellipse椭圆
      closest-side近边
      closest-corner近角
      farthest-side远边
      farthest-corner远角
      位置
      top right left center bottom

10.4  (95)电影卡片练习

10.8  (96)表格的简介
      table 表格
      tr为一行
      td为一个单元格
      colspan="2"横向合并单元格
      rowspan="2"纵向合并


      (97)长表格
      可以将表格分成三个部分 
      头部 thead
      主体 tbody
      底部 tfoot
      th代替头部

      (98)表格的样式
      border-spacing:指定边框之间的距离
      border-collapse:collapse;设置边框合并

      tr:nth-child(2n)选中偶数

      如果表格中没有使用tbody而是直接使用tr
      那么浏览器会自动创建一个tbody，并且全部放到tbody里
      tr不是table的子元素

      默认情况下元素在td是垂直居中的可以通过vertical-align:改

      display:table-cell;将元素设置为单元格


      (99)表单简介
      form action 指定提交服务器地址
      input
      text 文本框    <input type="text" name="">name为输入
      password 密码框
      button 按钮
      reset 重置按钮
      submit 提交按钮 value 显示文字 
      radio 单选按钮  checked默认选中 选择框，必须指定一个value属性，value属性最终会作为用户的填写值
      checkbox 多选按钮 
      
      select 下拉列表
      option 选项


      (100)表单补充
      color 选择颜色框
      email 邮箱框

      autocomplete=""off 关闭自动补全 没有历史
      readonly 表达设置为只读，数据会提交
      disabled 禁用 选取不了 不会提交
      autofocus 表单项自动获取焦点


10.9(101)项目搭建

      (102)width: 1226px;最小的距离

      (104)transparent属性用来指定全透明色彩
      border 去掉上面 且边距为0得到三角形


10.11(105)添加过渡效果
      transition:xx 3s;花费多久完成

      (106)头部log
      text-indent: -999px;隐藏文字


10.12(107)头部导航条
      
10.13(108)头部导航下拉条


10.21(109)右侧搜索框
      (110)左侧导航条
      (111)
      (112)


10.25(126)less简介
      css预处理语言是css的增强版，通过less可以编写更少的代码实现更强大的样式
      .box$*3创建三个

      html{
            css原生也支持变量的设置
            --color:red;
      }
      var(--color)

      calc(10px/2)自动计算    

      (127)less的变量
      // less的注释

      变量,在变量中可以存储一个任意的值
      在需要时可以任意修改值
      @变量名
      @a:100px;
      @b:box;
      .@(b){}

      名字相同的取最近

      width:100px;
      height:$width;





